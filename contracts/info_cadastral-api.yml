openapi: 3.0.1
info:
  title: API de Informações Cadastrais
  description: 'API para buscar informações cadastradas de prestadores e associados.'
  version: 1.0.0
tags:
- name: "user"
  description: "Tudo sobre prestadores e associados"
servers:
- url: http://localhost:11506
paths:
  /infocadastral/users:
    get:
      tags:
      - "user"
      operationId: "findAll"
      responses:
        "200":
          description: "200 response"
          content: {}
        "500":
          description: "Erro inesperado"
          content: {}
  /infocadastral/users/{tipo}:
    get:
      tags:
      - "user"
      operationId: "findByTipo"
      parameters:
      - name: "tipo"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content: {}
        "400":
          description: "Id fornecido inválido"
          content: {}
        "404":
          description: "Tipo não encontrado"
          content: {}          
        "500":
          description: "Erro inesperado"
          content: {}
  /infocadastral/users/filter:
    get:
      tags:
      - "user"
      operationId: "findAssociados"
      parameters:
      - in: "query"
        name: cargo
        schema:
          type: "string"
        required: true
      responses:
        "200":
          description: "200 response"
          content: {}
        "500":
          description: "Erro inesperado"
          content: {}
  /infocadastral/user:
    post:
      tags:
      - "user"
      operationId: "save"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: "201 response"
          content: {}
        "500":
          description: "Erro inesperado"
          content: {}
  /infocadastral/user/{id}:
    put:
      tags:
      - "user"
      operationId: "edit"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: "200 response"
          content: {}
        "400":
          description: "Id fornecido inválido"
          content: {}
        "404":
          description: "Prestador não encontrado"
          content: {}
        "500":
          description: "Erro inesperado"
          content: {}
    delete:
      tags:
      - "user"
      operationId: "delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content: {}
        "400":
          description: "Id fornecido inválido"
          content: {}
        "404":
          description: "Prestador não encontrado"
          content: {}
        "500":
          description: "Erro inesperado"
          content: {}
security:
- auth: []
components:
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: "object"
      properties:
        tipo:
          type: "string"
        plano:
          type: "string"
        categoria:
          type: "string"
        nome:
          type: "string"
        cargo:
          type: "string"
        telefone:
          type: "string"
        localizacao:
          type: "string"
        formacao:
          type: "string"
          